// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/levinhne/grpc-gateway-boilerplate/internal/todo/adapters"
	"github.com/levinhne/grpc-gateway-boilerplate/internal/todo/application"
	"github.com/levinhne/grpc-gateway-boilerplate/internal/todo/handlers"
	"github.com/levinhne/grpc-gateway-boilerplate/proto/todo/v1"
	"google.golang.org/grpc"
)

// Injectors from wire.go:

func Initialize(server *grpc.Server) (*App, error) {
	todoRepository := adapters.NewTodoRepository()
	serviceApplication := application.NewServiceApplication(todoRepository)
	todoServiceServer := handlers.NewTodoHandler(serviceApplication)
	app := New(server, todoServiceServer)
	return app, nil
}

// wire.go:

type App struct{}

func New(server *grpc.Server, todoSrv todov1.TodoServiceServer) *App {
	todov1.RegisterTodoServiceServer(server, todoSrv)
	return &App{}
}
