// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/levinhne/grpc-gateway-boilerplate/internal/todo/adapters"
	"github.com/levinhne/grpc-gateway-boilerplate/internal/todo/application"
	"github.com/uptrace/bun"
	"go.uber.org/zap"
	"google.golang.org/grpc"
)

// Injectors from wire.go:

func Initialize(db *bun.DB, logger *zap.Logger, grpcServer *grpc.Server) (*App, error) {
	todoRepository := adapters.NewTodoRepository(db)
	serviceApplication := application.NewServiceApplication(todoRepository)
	app := New(serviceApplication)
	return app, nil
}

// wire.go:

type App struct{}

func New(app application.ServiceApplication) *App {
	return &App{}
}
